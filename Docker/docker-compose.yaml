version: '3.3'
services:

  #-------------------------------#
  # üñ•Ô∏è RabbitMQ                   #
  #-------------------------------#
  rabbitmq:
      image: rabbitmq:3-management
      container_name: rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=myuser
        - RABBITMQ_DEFAULT_PASS=mypassword

      volumes:
        - type: bind
          source: ../Rabbitmq/rabbitmq.config
          target: /etc/rabbitmq/rabbitmq.config
        - type: bind
          source: ../Rabbitmq/logstash-sink-queue.json
          target: /etc/rabbitmq/rabbitmq-defs.json
      ports:
        - "5672:5672"
        - "15672:15672"
      networks:
        - nasa-network
      restart: always

  #-------------------------------#
  # üñ•Ô∏è Logstash                   #
  #-------------------------------#
  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2  
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    volumes: 
      - ../Logstash/pipeline/:/usr/share/logstash/pipeline/
    environment: 
        - "LS_JAVA_OPTS=-Xms1g -Xmx1g"
        - "xpack.monitoring.enabled:true"
        - "xpack.monitoring.elasticsearch.url:http://elasticsearch:9200"
        - RABBITMQUSER=myuser
        - RABBITMQPASSWORD=mypassword
        - RABBITQUEUENAME=logstash-sink-queue
    ports:
      - "10155:10155"
    networks:
        - nasa-network
    restart: always

  #-------------------------------#
  # üñ•Ô∏è ElasticSearch              #
  #-------------------------------#
  elasticsearch:
      container_name: elasticsearch
      hostname: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
      ports:
        - "9200:9200"
        - "9300:9300"      
      environment:
        - node.name=elasticsearch
        - xpack.security.enabled=false
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - cluster.routing.allocation.disk.threshold_enabled=false
      ulimits:
        memlock:
          soft: -1
          hard: -1
      networks: 
      - nasa-network
      logging:
        driver: none

  #-------------------------------#
  # üñ•Ô∏è ImageProcessingScript      #
  #-------------------------------#
  imagepreprocessing:
    container_name: imagepreprocessing
    build:
      context: ../ImagePreProcessing
      dockerfile: Dockerfile   
    environment:
        - RABBITMQUSER=myuser
        - RABBITMQPASSWORD=mypassword
        - RABBITQUEUENAME=logstash-sink-queue
        - MONGO_USER=myuser
        - MONGO_PASSWORD=mypassword
        - MONGO_DATABASE=mydb
    depends_on:
      - rabbitmq
      - mongo_db
    links:
      - rabbitmq
      - mongo_db
    networks:
      - nasa-network
    restart: always

  #-------------------------------#
  # üñ•Ô∏è MongoDb                    #
  #-------------------------------#
  mongo_db:
    image: mongo:4.2.12
    environment:
      MONGO_INITDB_ROOT_USERNAME: myuser
      MONGO_INITDB_ROOT_PASSWORD: mypassword
    volumes:
      - ../MongoDb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - nasa-network

  #-------------------------------#
  # üñ•Ô∏è MongoExpress               #
  #-------------------------------#
  mongo_express:
    image: mongo-express:0.54.0
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
      - ME_CONFIG_MONGODB_SERVER=mongo_db
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=mydb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=myuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mypassword
    ports:
      - "8083:8081"
    restart: on-failure
    depends_on:
      - mongo_db
    networks:
      - nasa-network


#TODO add nginx e una nuova rete, rabbitmq visibile solo attraverso nginx, tutte le porte non si espongono
#perch√® si vedono comunque essendo sulla stessa rete, si espone solo la porta 80 di nginx
networks:
  nasa-network:
    name: nasa-network
    driver: bridge

volumes:
  shared-database:
      driver: local 



